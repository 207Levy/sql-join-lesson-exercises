{"numFailedTestSuites":1,"numFailedTests":1,"numPassedTestSuites":0,"numPassedTests":0,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTotalTestSuites":1,"numTotalTests":1,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1557991799444,"success":false,"testResults":[{"console":null,"failureMessage":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[1mexercise1 › Create the Patient, Ethnicity, Symptoms, Gender, and Disease tables as per the instructions (please note the spelling of each field & table name)\u001b[39m\u001b[22m\n\n    Make sure the tables `symptoms` table has `family` as a primary key, and `disease` has `name` as the PK__stacktrace__\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 40 | \u001b[39m                            validation\u001b[33m.\u001b[39mdetails\u001b[33m.\u001b[39mtoLowerCase()\u001b[33m.\u001b[39mincludes(\u001b[32m'survival_rate'\u001b[39m) \u001b[33m?\u001b[39m \u001b[32m\"Make sure the `disease` table has the field `survival_rate`\"\u001b[39m \u001b[33m:\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 41 | \u001b[39m                                \u001b[32m\"Make sure the `patient` table has the fields `ethnicity`, `gender`, `symptoms_family`, and `disease` as Foreign Keys\"\u001b[39m))\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m\u001b[31m\u001b[1m>\u001b[2m\u001b[39m\u001b[90m 42 | \u001b[39m            \u001b[33m.\u001b[39mtoBeFalsy()\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[2m\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 43 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 44 | \u001b[39m\u001b[0m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 45 | \u001b[39m        \u001b[90m// console.log(allTableResults)\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeFalsy (\u001b[2m\u001b[0m\u001b[36mtests/exercises/ex-1.test.js\u001b[39m\u001b[0m\u001b[2m:42:14)\u001b[2m\u001b[22m\n","numFailingTests":1,"numPassingTests":0,"numPendingTests":0,"perfStats":{"end":1557991800484,"start":1557991799881},"snapshot":{"added":0,"fileDeleted":false,"matched":0,"unchecked":0,"unmatched":0,"updated":0,"uncheckedKeys":[]},"testFilePath":"/Users/jona/Documents/elevation/fs_tests/sql/sql-join-lesson-exercises/tests/exercises/ex-1.test.js","testResults":[{"ancestorTitles":["exercise1"],"duration":136,"failureMessages":["Error: Make sure the tables `symptoms` table has `family` as a primary key, and `disease` has `name` as the PK__stacktrace__\n    at Object.toBeFalsy (/Users/jona/Documents/elevation/fs_tests/sql/sql-join-lesson-exercises/tests/exercises/ex-1.test.js:42:14)"],"fullName":"exercise1 Create the Patient, Ethnicity, Symptoms, Gender, and Disease tables as per the instructions (please note the spelling of each field & table name)","location":null,"numPassingAsserts":0,"status":"failed","title":"Create the Patient, Ethnicity, Symptoms, Gender, and Disease tables as per the instructions (please note the spelling of each field & table name)"}],"sourceMaps":{},"skipped":false,"leaks":false}],"wasInterrupted":false}